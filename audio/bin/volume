#!/bin/luajit

function first(iterable)
	for line in iterable do
		return line
	end
end

function firstline(filename)
	file = io.open(filename)
	if file then
		line = first(io.lines(filename))
		io.close(file)
		if line then
			return line
		else
			io.stderr:write(string.format("eof: %s is empty", filename))
			os.exit(1)
		end
	else
		io.stderr:write(string.format("file_not_found: %s does not exist", filename))
		os.exit(1)
	end
end

function getenv(varname)
	var = os.getenv(varname)
	if var then
		return var
	else
		io.stderr:write(string.format('name: %s does not exist', varname))
		os.exit(1)
	end
end

function mute_icon(mute)
	if mute == 0 then
		return "墳"
	elseif mute == 1 then
		return "ﱝ"
	else
		io.stderr:write(string.format('muteicon: %s is not 0 or 1', mute))
		os.exit(1)
	end
end

if #arg == 1 and arg[1] == "-v" then
	debug = print
else
	debug = function() end
end

cache_var = "XDG_CACHE_HOME"
debug('getting ' .. cache_var)
cache = getenv(cache_var)
debug("cache is " .. cache)
newest_path = cache .. '/bin/pulsetest.newest_sink_index'
debug('reading from ' .. newest_path)
newest = tonumber(firstline(newest_path))
debug('newest sink is ' .. newest)
mute_path = string.format('%s/bin/pulsetest.sinks.%s.mute', cache, newest)
debug('reading from ' .. mute_path)
mute_icon = mute_icon(tonumber(firstline(mute_path)))
debug('mute is ' .. mute_icon)
volume_path = string.format('%s/bin/pulsetest.sinks.%s.volume', cache, newest)
debug('reading from ' .. volume_path)
volume = tonumber(firstline(volume_path))
debug('volume is ' .. volume)

print(string.format(' %s %s%% ', mute_icon, volume))

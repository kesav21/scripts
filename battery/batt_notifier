#!/bin/bash

# fail on error

set -o errexit
set -o pipefail
set -o nounset

# get file name

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__logfile=$__file.log

# set up logging

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>$__logfile 2>&1

# everything below will be sent to a log file


# if the battery % is below 10%
# and the laptop is not plugged in,
# then send a notification every minute

# minimum acceptable battery power
minimum=15
# time between notifications (in seconds)
waittime=60 # 1 minute


# sends a notification when the current battery level is
# below the threshold, and is not charging
# $1 is battery status: charging/discharging/full
# $2 is current battery level
# $3 is minimum acceptable battery power
batterylow () {
	if [ "$1" = "Discharging" ]
	then
		if [ "$2" -lt "$3" ]
		then
			notify-send "Battery low" "Level: $2% "
		fi
	fi
}

# sends a notification when the battery is full
# $1 is battery status: charging/discharging/full
# $2 is current battery level
batteryhigh () {
	if [ "$1" = "Full" ]
	then
		notify-send "Battery high" "Level: $2% "
	fi
}

while true
do
	# export DISPLAY=:0.0

	# instead of acpi use
	# cat /sys/class/power_supply/BAT?/capacity
	# or
	# cat /sys/class/power_supply/BAT0/capacity

	status=$(acpi -b | grep "Battery 0" | grep -P -o '(?<=\:)(.*?)(?=,)' | tr -d '[:space:]')
	battery=$(acpi -b | grep "Battery 0" | grep -P -o '[0-9]+(?=%)')

	echo "status:		$status"
	echo "battery:	$battery"
	echo "minimum:	$minimum"
	echo ""

	batterylow $status $battery $minimum
	batteryhigh $status $battery

	sleep $waittime
done

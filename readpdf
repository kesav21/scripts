#!/bin/sh

#
# prints all pdf files in $HOME
#
lspdf() {
	# i don't really know how this works
	find "$HOME" -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*.pdf' -print
}

#
# choose list of pdfs to display, command line and fzf
# if the first command-line argument is -n, do not use fzf
#
getpdfs() {
	# always print cmd args
	printf '%s\n' "$@" | sort | uniq | stest -e
	# maybe choose fzf
	[ "$1" != '-n' ] &&
		# choose pdfs, sort and remove duplicates
		# make pdfs presentable for choosing, then convert them back
		lspdf | sed "s|$HOME|~|" | fzfmenu -m | sort | uniq | sed "s|~|$HOME|"
}

#
# if there are no tabbed instances, create new tabbed instance
# if given invalid tabbed instance, create new tabbed instance
# if given valid tabbed instance, use it
#
getxid() {
	# if there exist tabbed instances
	if xwininfo -children -root | grep 'tabbed' >/dev/null; then
		# get xid of selected instance
		xid=$(xwininfo | awk '/Window id/ {print $4}')
		# if is a tabbed instance, use selected instance
		# else, create new instance
		xwininfo -children -root | grep "$xid.*tabbed" >/dev/null &&
			echo $xid ||
			tabbed -cd
	# else, create new instance
	else
		tabbed -cd
	fi

}

#
# open all given files in tabbed+zathura
#
open() {
	# accepts tabbed xid as input
	echo $1
	# reads pdfs from stdin
	while read -r line; do
		echo $line
		# open in zathura
		zathura --fork -e "$1" "$line"
	done
}

# put it all together
getpdfs "$@" | open "$(getxid)"

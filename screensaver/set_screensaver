#!/usr/bin/env bash

# fail on error

set -o errexit
set -o pipefail
set -o nounset

# get file name

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
__logfile=$__file.log

# set up logging

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>$__logfile 2>&1

# everything below will be sent to a log file


# this script turns off the screensaver if any audio is playing
# and turns it on when there is no media playing


# set screensaver timeout (in minutes)
timeout=5
# set screensaver timeout (in seconds)
notify=10


# calculate timeout in seconds
timeoutsec=$(echo "$timeout * 60" | bc)


#
# $1 is timeout in minutes
# $2 is notify time
# $3 is timeout is seconds
#
# if audio is running
# dpms:	 disable (unless already disabled)
# xautolock: disable (unless already disabled)
# else
# dpms:	 enable (unless already enabled)
# dpms:	 set timeout (unless already set)
# xautolock: enable (unless already enabled)
#
set_screensaver () {

	# checks whether there is any audio playing
	audio_status=$(~/.scripts/audio/is_audio_running)

	if [ "$audio_status" = "RUNNING" ]
	then
		echo "audio:		running"

		~/.scripts/screensaver/set_dpms "Disable"
		~/.scripts/screensaver/set_xautolock "Disable"
	else
		echo "audio:		not running"

		~/.scripts/screensaver/set_dpms "Enable"
		~/.scripts/screensaver/set_dpms_timeout $3
		~/.scripts/screensaver/set_xautolock "Enable" $1 $2
	fi

}


while true
do
	set_screensaver $timeout $notify $timeoutsec

	echo ""
	sleep 5
done

